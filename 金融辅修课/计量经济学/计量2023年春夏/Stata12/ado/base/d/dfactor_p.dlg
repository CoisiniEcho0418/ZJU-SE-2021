/*
	predict (after dfactor)

*!  VERSION 1.0.4  06apr2011

*/

VERSION 12.0

INCLUDE _std_medium
INCLUDE header
HELP hlp1, view("help dfactor postestimation")
RESET res1

SCRIPT POSTINIT
BEGIN
	script _p_gentype_multiple
	script _p_gentype_setMedium
END

DIALOG main, label("predict - Prediction after estimation") tabtitle("Main")
BEGIN
  INCLUDE  _p_gentype

  GROUPBOX gb_opt	_lft	_ls	_iwd	_ht12,			///
	label("Produce:")
  RADIO rb_y		_indent	_ss	_inwd 	., first		///
	option(y)							///
	onclickon(program main_y_on)					///
	label("Dependent variable")
  RADIO rb_xb		@	_ss	@	.,			///
	option(xb)							///
	onclickon(program main_xb_on)					///
	label("Observable mean")
  RADIO rb_xbf		@	_ss	@	.,			///
	option(xbf)							///
	onclickon(program main_xbf_on)					///
	label("Observable mean plus the factor contribution")
  RADIO rb_factors	@	_ss	@	.,			///
	option(factors)							///
	onclickon(program main_factors_on)				///
	label("Unobserved factors")
  RADIO rb_residuals	@	_ss	@	.,			///
	option(residuals)						///
	onclickon(program main_residuals_on)				///
	label("Residuals")
  RADIO rb_innovations	@	_ss	@	., last			///
	option(innovations)						///
	onclickon(program main_innovations_on)				///
	label("Innovations")
END

PROGRAM main_y_on
BEGIN
	call opts.tx_equation.enable
	call opts.cb_equation.enable
	call opts.tx_rmse.enable
	call opts.ed_rmse.enable
	call opts.tx_dynamic.enable
	call opts.ed_dynamic.enable
	call adv.ck_smethod.enable

	if adv.ck_smethod {
		call adv.rb_onestep.enable
		call adv.rb_smooth.enable
		call adv.rb_filter.disable
	}
END

PROGRAM main_xb_on
BEGIN
	call opts.tx_equation.enable
	call opts.cb_equation.enable
	call opts.tx_rmse.disable
	call opts.ed_rmse.disable
	call opts.tx_dynamic.enable
	call opts.ed_dynamic.enable
	call adv.ck_smethod.disable
	call adv.rb_onestep.disable
	call adv.rb_smooth.disable
	call adv.rb_filter.disable
END

PROGRAM main_xbf_on
BEGIN
	call opts.tx_equation.enable
	call opts.cb_equation.enable
	call opts.tx_rmse.disable
	call opts.ed_rmse.disable
	call opts.tx_dynamic.disable
	call opts.ed_dynamic.disable
	call adv.ck_smethod.enable
	if adv.ck_smethod {
		call adv.rb_onestep.enable
		call adv.rb_smooth.enable
		call adv.rb_filter.disable
	}
END

PROGRAM main_factors_on
BEGIN
	call opts.tx_equation.enable
	call opts.cb_equation.enable
	call opts.tx_rmse.enable
	call opts.ed_rmse.enable
	call opts.tx_dynamic.enable
	call opts.ed_dynamic.enable
	call adv.ck_smethod.enable

	if adv.ck_smethod {
		call adv.rb_onestep.enable
		call adv.rb_smooth.enable
		call adv.rb_filter.enable
	}
END

PROGRAM main_residuals_on
BEGIN
	call opts.tx_equation.enable
	call opts.cb_equation.enable
	call opts.tx_rmse.disable
	call opts.ed_rmse.disable
	call opts.tx_dynamic.enable
	call opts.ed_dynamic.enable
	call adv.ck_smethod.enable

	if adv.ck_smethod {
		call adv.rb_onestep.enable
		call adv.rb_smooth.enable
		call adv.rb_filter.enable
	}
END

PROGRAM main_innovations_on
BEGIN
	call opts.tx_equation.enable
	call opts.cb_equation.enable
	call opts.tx_rmse.disable
	call opts.ed_rmse.disable
	call opts.tx_dynamic.disable
	call opts.ed_dynamic.disable
	call adv.ck_smethod.enable

	if adv.ck_smethod {
		call adv.rb_onestep.enable
		call adv.rb_smooth.enable
		call adv.rb_filter.disable
	}
END

INCLUDE ifin

DIALOG opts, tabtitle("Options")
BEGIN
  TEXT tx_equation	_lft	_top	_iwd	.,			///
	label("Name of equations for predictions:")
  COMBOBOX cb_equation	@	_ss	@	.,			///
	dropdown							///
	contents(e(eqnames))						///
	option(equation)						///
	label("Name of equations for predictions")

  TEXT tx_rmse		@	_ls	@	.,			///
	label("Store root mean squared errors of predicted statistics in new variables:")
  EDIT ed_rmse		@	_ss	@	.,			///
	option(rmse)							///
	label("Store root mean squared errors of predicted statistics in new variables")

  TEXT tx_dynamic	@	_ls	_vnwd	.,			///
	label("Dynamic forecasts:")
  EDIT ed_dynamic	@	_ss	_cwd1	.,			///
	option(dynamic)							///
	label("Dynamic forecasts")
END

DIALOG adv, tabtitle("Advanced")
BEGIN
  CHECKBOX ck_smethod	_lft	_top	_iwd	_ht6,			///
	groupbox							///
	onclickon(program adv_ck_smethod_on)				///
	onclickoff(script adv_ck_smethod_off)				///
	label("Method for predicting unobserved states")
  RADIO rb_onestep	_indent	_ss	_inwd	., first		///
	option(smethod(onestep))					///
	label("Predict using past information")
  RADIO rb_smooth	@	_ss	@	., 			///
	option(smethod(smooth))						///
	onclickon(program adv_rb_smooth_on)				///
	onclickoff(program adv_rb_smooth_off)				///
	label("Predict using all sample information")
  RADIO rb_filter	@	_ss	@	., last			///
	option(smethod(filter))						///
	onclickon(program adv_rb_filter_on)				///
	onclickoff(program adv_rb_filter_off)				///
	label("Predict using past and contemporaneous information")
END

PROGRAM adv_ck_smethod_on
BEGIN
	call adv.rb_onestep.enable
	call adv.rb_smooth.enable
	if adv.rb_smooth {
		call program adv_rb_smooth_on
	}
	if main.rb_factors | main.rb_residuals {
		call adv.rb_filter.enable
		if adv.rb_filter {
			call program adv_rb_filter_on
		}
	}
END

SCRIPT adv_ck_smethod_off
BEGIN
	adv.rb_onestep.disable
	adv.rb_filter.disable
	adv.rb_smooth.disable
	program adv_rb_smooth_off
END

PROGRAM adv_rb_smooth_on
BEGIN
	if adv.rb_smooth.isenabled() {
		call opts.tx_dynamic.disable
		call opts.ed_dynamic.disable
	}
END

PROGRAM adv_rb_smooth_off
BEGIN
	if main.rb_y | main.rb_factors | main.rb_residuals {
		call opts.tx_dynamic.enable
		call opts.ed_dynamic.enable
	}
END

PROGRAM adv_rb_filter_on
BEGIN
	if adv.rb_filter.isenabled() {
		call opts.tx_dynamic.disable
		call opts.ed_dynamic.disable
	}
END

PROGRAM adv_rb_filter_off
BEGIN
	if main.rb_y | main.rb_factors | main.rb_residuals {
		call opts.tx_dynamic.enable
		call opts.ed_dynamic.enable
	}
END

INCLUDE _p_gentype_sc
INCLUDE _type_list_fd

PROGRAM command
BEGIN
	put "predict "
	put " " /program _p_gentype_output
	INCLUDE _ifin_pr
	beginoptions
		option radio(main rb_y rb_xb rb_xbf rb_factors 		///
			rb_residuals rb_innovations)
		optionarg opts.cb_equation
		optionarg opts.ed_rmse
		if opts.ed_dynamic.isenabled() {
			optionarg opts.ed_dynamic
		}
		if adv.ck_smethod {
			option adv.rb_onestep
			option adv.rb_smooth
			option adv.rb_filter
		}
	endoptions
END

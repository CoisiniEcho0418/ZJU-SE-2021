/*
  gr_ed_barm.idlg

*!  VERSION 1.0.0  12jan2007

*/

SCRIPT barm_PREINIT
BEGIN
	create STRING fill_color
	create STRING fill_rgb
	create STRING intensity
	create STRING line_color
	create STRING line_rgb
	create STRING width
	create STRING pattern
	create STRING barmwidth

	create DOUBLE drawview
	program barm_get_defaults
END

SCRIPT barm_POSTINIT
BEGIN
	program barm_initialize_controls
END

DIALOG barm, label("Bar properties") tabtitle("Bars")
BEGIN
  GROUPBOX gb_barm	_lft	_top	_iwd	_ht20,		///
	label("Bar properties")
  TEXT     tx_fclr	_ilft	_ss	_wd	.,		///
	label("Color:") right
  COMBOBOX cb_fclr	_sep	@	_cbwd	.,		///
	dropdownlist contents(_colors) 				///
	onselchangelist(barm_cl_fclr_sel)
  COLOR    cl_fclr	_cbsep	@	_clwd	.,

  TEXT     tx_intensity	_ilft	_mls	_wd	.,		///
	label("Fill intensity:") right
  COMBOBOX cb_intensity	_sep	@	_cbwd	.,		///
	dropdown contents(_intensity)
  
  TEXT     tx_width	_ilft	 _mls	_wd	.,		///
	label("Outline width:") right
  COMBOBOX cb_width	_sep	@	_cbwd	.,		///
	dropdown						///
	contents(_linewidths)

  TEXT     tx_pattern	_ilft	_mls	_wd	.,		///
	label("Outline pattern:") right
  COMBOBOX cb_pattern	_sep	@	_cbwd	.,		///
	dropdownlist						///
	contents(_linepatterns)

  TEXT     tx_bwidth	_ilft	 _mls	_wd	.,		///
	label("Bar width:") right
  COMBOBOX cb_bwidth	_sep	@	_cbwd	.,		///
	dropdown contents(_symbolsizes)

  CHECKBOX ck_outline	_ilft	_ls	_ibwd	_ht2h,		///
	groupbox						///
	label("Different outline color")			///
	onclickon(script outline_on)				///
	onclickoff(script outline_off) nomemory

  TEXT     tx_lclr	_iilft	_ss	_wd2	.,		///
	label("Outline color:") right
  COMBOBOX cb_lclr	_sep2	@	_cbwd	.,		///
	dropdownlist contents(_colors) 				///
	onselchangelist(barm_cl_lclr_sel)
DEFINE x @x
  COLOR    cl_lclr	_cbsep	@	_clwd	.,

  // public scope (do not change name)
  CHECKBOX ck_hide	_lft	_xxxls	_cbwd	.,		///
	label("Hide plot")
END

SCRIPT outline_on
BEGIN
	barm.tx_lclr.enable
	barm.cb_lclr.enable
END

SCRIPT outline_off
BEGIN
	barm.tx_lclr.disable
	barm.cb_lclr.disable
END

LIST barm_cl_fclr_sel
BEGIN
	barm.cl_fclr.show
	barm.cl_fclr.hide
END
LIST barm_cl_lclr_sel
BEGIN
	barm.cl_lclr.show
	barm.cl_lclr.hide
END

PROGRAM barm_get_defaults
BEGIN
	call Gstyle.withvalue index.setvalue class @.area.shadestyle.color.styledex
	call index.withvalue fill_color.setvalue class .__STYLES.color[@]
	call barm.cb_fclr.setdefault class fill_color.value
	call Gstyle.withvalue fill_rgb.setvalue class @.area.shadestyle.color.rgb
	call barm.cl_fclr.setdefault class fill_rgb.value

	call Gstyle.withvalue index.setvalue  class @.area.shadestyle.intensity.styledex
	call index.withvalue intensity.setvalue class .__STYLES.intensity[@]
	if ! intensity {
		call Gstyle.withvalue intensity.setvalue class @.area.shadestyle.intensity.val
	}
	call barm.cb_intensity.setdefault class intensity.value

	call Gstyle.withvalue index.setvalue class @.area.linestyle.color.styledex
	call index.withvalue line_color.setvalue class .__STYLES.color[@]
	call barm.cb_lclr.setdefault class line_color.value
	call Gstyle.withvalue line_rgb.setvalue class @.area.linestyle.color.rgb
	call barm.cl_lclr.setdefault class line_rgb.value

	call Gstyle.withvalue index.setvalue class @.area.linestyle.width.styledex
	call index.withvalue width.setvalue class .__STYLES.linewidth[@]
	if ! width {
		call Gstyle.withvalue width.setvalue class @.area.linestyle.width.val
	}
	call barm.cb_width.setdefault class width.value

	call Gstyle.withvalue index.setvalue class @.area.linestyle.pattern.styledex
	call index.withvalue pattern.setvalue class .__STYLES.linepattern[@]
	call barm.cb_pattern.setdefault class pattern.value

	call G.withvalue index.setvalue class @.style.marker.size.styledex
	call index.withvalue barmwidth.setvalue class .__STYLES.symbolsize[@]
	if ! barmwidth {
		call G.withvalue barmwidth.setvalue class @.style.marker.size.val
	}
	call barm.cb_bwidth.setdefault class barmwidth.value

	call G.withvalue drawview.setvalue class @.draw_view.istrue
	if drawview {
		call barm.ck_hide.setdefault 0
	}
	else {
		call barm.ck_hide.setdefault 1
	}
END

PROGRAM barm_initialize_controls
BEGIN
	if fill_color {
		call barm.cb_fclr.setvalue class fill_color.value
	}
	else {
		call barm.cb_fclr.setvalue "custom"
	}
	call barm.cl_fclr.setvalue class fill_rgb.value
	call barm.cb_intensity.setvalue class intensity.value

	if line_color {
		call barm.cb_lclr.setvalue class line_color.value
	}
	else {
		call barm.cb_lclr.setvalue "custom"
	}
	call barm.cl_lclr.setvalue class line_rgb.value

	call barm.cb_width.setvalue class width.value
	call barm.cb_pattern.setvalue class pattern.value
	call barm.cb_bwidth.setvalue class barmwidth.value

	if fill_rgb.isneq(line_rgb) {
		call barm.ck_outline.seton
	}
	else {
		call barm.ck_outline.setoff
	}

	if drawview {
		call barm.ck_hide.setoff
	}
	else {
		call barm.ck_hide.seton
	}
END

PROGRAM barm_output
BEGIN
	call program barm_get_defaults

	if ! barm.cl_fclr.isvisible() & ! barm.cb_fclr.isdefault() {
		put "style(area(shadestyle(color(" 
		put barm.cb_fclr 
		put ")))) "
	}
	if barm.cl_fclr.isvisible() & ! barm.cl_fclr.isdefault() {
		put "style(area(shadestyle(color("  `"""'
		put barm.cl_fclr
		put `"""'
		put ")))) "
	}

	if ! barm.ck_outline & barm.cb_fclr.isneq(line_color) {
		if ! barm.cl_fclr.isvisible() {
			put "style(area(linestyle(color(" 
			put barm.cb_fclr 
			put ")))) "
		}
		if barm.cl_fclr.isvisible() & barm.cl_fclr.isneq(line_rgb) {
			put "style(area(linestyle(color("  `"""'
			put barm.cl_fclr
			put `"""'
			put ")))) "
		}
	}
	if barm.cb_lclr & barm.ck_outline {
		if ! barm.cl_lclr.isvisible() & ! barm.cb_lclr.isdefault() {
			put "style(area(linestyle(color(" 
			put barm.cb_lclr 
			put ")))) "
		}
		if barm.cl_lclr.isvisible() & ! barm.cl_lclr.isdefault() {
			put "style(area(linestyle(color("  `"""'
			put barm.cl_lclr
			put `"""'
			put ")))) "
		}
	}

	if ! barm.cb_intensity.isdefault() & barm.cb_intensity {
		put "style(area(shadestyle(intensity("
		put barm.cb_intensity
		put ")))) "
	}

	if ! barm.cb_width.isdefault() {
		put "style(area(linestyle(width("
		put barm.cb_width
		put ")))) "
	}
	if ! barm.cb_pattern.isdefault() {
		put "style(area(linestyle(pattern("
		put barm.cb_pattern
		put ")))) "
	}
	if ! barm.cb_bwidth.isdefault() & barm.cb_bwidth {
		put "style(marker(size( " barm.cb_bwidth "))) "
	}

	if ! barm.ck_hide.isdefault() {
		if barm.ck_hide {
			put "set(draw_view no) "
		}
		else {
			put "set(draw_view yes) "
		}
	}
END

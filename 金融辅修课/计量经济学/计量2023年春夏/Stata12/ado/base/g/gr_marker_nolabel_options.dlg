/*
    gr_marker_nolabel_options.dlg
    
*!  VERSION 1.0.0  02jan2007

	// SCRIPTS and PROGRAMS for external use

*/

VERSION 10

INCLUDE _std_vsmall
DEFINE _dlght 145
INCLUDE header_gr_child

DEFINE _clwd	15
DEFINE _wd	140
DEFINE _sep	+145
DEFINE _cbwd	130
DEFINE _cbsep	+135

HELP hlp1, view("help scatter##marker_options")
RESET res1

DIALOG main, label("Marker options") tabtitle("Main")
BEGIN
  TEXT     tx_size	_lft	15	_wd	.,		///
	label("Size:") right
  COMBOBOX cb_size	_sep	@	_cbwd	.,		///
	dropdown option(msize)					///
	contents(symbolsizes)

  TEXT     tx_clr	_lft	_mls	_wd	.,		///
	label("Color:") right
  DEFINE y @y
  COMBOBOX cb_clr	_sep	@	_cbwd	.,		///
	dropdownlist contents(colors) option(mcolor)		///
	onselchangelist(main_cl_clr_sel)
  COLOR    cl_clr	_cbsep	@	_clwd	., option(mcolor)
  
  TEXT     tx_symbol	_lft	_mls	_wd	.,		///
	label("Symbol:") right
  COMBOBOX cb_symbol	_sep	@	_cbwd	.,		///
	dropdownlist option(msymbol)				///
	contents(symbols)
END

LIST main_cl_clr_sel
BEGIN
	main.cl_clr.hide
	main.cl_clr.show
	main.cl_clr.hide
END

DIALOG adv, tabtitle("Advanced")
BEGIN
  TEXT     tx_fclr	_lft	15	_wd	.,		///
	label("Fill color:") right
  COMBOBOX cb_fclr	_sep	@	_cbwd	.,		///
	dropdownlist contents(colors) option(mfcolor)		///
	onselchangelist(adv_cl_fclr_sel)
  COLOR    cl_fclr	_vnsep	@	_clwd	., option(mfcolor)	

  TEXT     tx_lclr	_lft	_mls	_wd	.,		///
	label("Outline color:") right
  COMBOBOX cb_lclr	_sep	@	_cbwd	.,		///
	dropdownlist contents(colors) option(mlcolor)		///
	onselchangelist(adv_cl_lclr_sel)
  COLOR    cl_lclr	_cbsep	@	_clwd	., option(mlcolor)

  TEXT     tx_lwidth	_lft	_mls	_wd	.,		///
	label("Outline width:") right
  COMBOBOX cb_lwidth	_sep	@	_cbwd	.,		///
	dropdown option(mlwidth)				///
	contents(linewidths)
END

LIST adv_cl_fclr_sel
BEGIN
	adv.cl_fclr.hide
	adv.cl_fclr.show
	adv.cl_fclr.hide
END

LIST adv_cl_lclr_sel
BEGIN
	adv.cl_lclr.hide
	adv.cl_lclr.show
	adv.cl_lclr.hide
END

PROGRAM command
BEGIN
	if main.cl_clr.isvisible() {
		optionarg /quoted main.cl_clr
	}
	if ! main.cl_clr.isvisible() {
		optionarg /hidedefault main.cb_clr
	}
	optionarg /hidedefault main.cb_size
	optionarg /hidedefault main.cb_symbol
	
	if adv.cl_fclr.isvisible() {
		optionarg /quoted adv.cl_fclr
	}
	if ! adv.cl_fclr.isvisible() {
		optionarg /hidedefault adv.cb_fclr
	}
	if adv.cl_lclr.isvisible() {
		optionarg /quoted adv.cl_lclr
	}
	if ! adv.cl_lclr.isvisible() {
		optionarg /hidedefault adv.cb_lclr
	}
	optionarg /hidedefault adv.cb_lwidth
END

/*
  margins

*!  VERSION 1.1.5  23may2011

  keyword:  eclass

*/

VERSION 12.0

INCLUDE _std_xlarge /* DO NOT CHANGE WIDTH UNLESS YOU CHANGE -setposition- */
DEFINE _dlght 510
INCLUDE header

HELP hlp1, view("help margins")
RESET res1

SCRIPT PREINIT
BEGIN
	create STRING contrastListString
	script at_PREINIT
END


PROGRAM POSTINIT_PROGRAM
BEGIN
	if __MESSAGE.contains("-meffect-") {
		call main.ck_marg_eff.seton
	}
	if __MESSAGE.contains("-contrast-") {
		call con.ck_contrast.seton
	}
	if __MESSAGE.contains("-pwcompare-") {
		call pw.ck_pwcompare.seton
	}
END

SCRIPT POSTINIT
BEGIN
	ATCommandDisplayList.copyToArray at_list
	at.lb_atBuild.repopulate
END

PROGRAM ON_DOTPROMPT
BEGIN
	call main.cb_marlist.repopulate
	call main.cb_marg_eff.repopulate
	call within.cb_within.repopulate
END

DIALOG main, tabtitle("Main")						///
title("margins - Marginal means, predictive margins, and marginal effects")
BEGIN
  TEXT tx_marlist	_lft	_top	_iwd	.,			///
	label("Factor terms to compute margins for:")
  COMBOBOX cb_marlist	@	_ss	_iwd	.,			///
	append								///
	dropdown							///
	contents(margins_mlist)						///
	label("Factor terms to compute margins for")
  BUTTON  bu_contrastlist _slw20	@	20	.,		///
	onpush(script showContrastListDialog)				///
	tooltip("Create a contrast list")				///
        label("...")
  CHECKBOX ck_grand	_lft	_ls	_iwd	.,			///
	option(grand)							///
	label("Add grand margin, default if no factor terms specified")

  GROUPBOX gb_sel_resp	@	_ls	_iwd	_ht11,			///
	label("Select response")
  RADIO rb_default	_indent	_ss	_iibwd	., first		///
	label("Default prediction")
  RADIO rb_predict	@	_ss	@	., 			///
	onclickon(main.ed_predict.enable)				///
	onclickoff(main.ed_predict.disable)				///
	label("Specify a prediction")
  EDIT ed_predict	+20	_ss	@	.,			///
	option(predict)							///
	label("Specify a prediction")
  DEFINE holdx @x
  RADIO rb_exp		_ilft	_ms	@	., last 		///
	onclickon(main.ed_exp.enable)					///
	onclickoff(main.ed_exp.disable)					///
	label("Specify an expression of estimated parameters")
  EDIT ed_exp		holdx	_ss	@	.,			///
	option(expression)						///
	label("Specify an expression of estimated parameters")

  CHECKBOX ck_marg_eff	_lft	_xxls	_iwd	_ht15h,			///
	groupbox							///
	onclickon(script main_marg_eff_on)				///
	onclickoff(script main_marg_eff_off)				///
	label("Marginal effects of response")
  RADIO rb_dydx		_indent	_ss	_inwd	., first 		///
	label("Marginal effects d(y)/d(x)")
  RADIO rb_eyex		@	_ss	@	.,			///
	label("Elasticities d(lny)/d(lnx)")
  RADIO rb_dyex		@	_ss	@	.,			///
	label("Semielasticities d(y)/d(lnx)")
  RADIO rb_eydx		@	_ss	@	., last			///
	label("Semielasticities d(lny)/d(x)")
  TEXT tx_marg_eff	@	_ms	@	.,			///
	label("Variables:")
  COMBOBOX cb_marg_eff	@	_ss	_ibwd	.,			///
	append								///
	dropdown							///
	contents(margins_atlist)					///
	label("Variables")
  CHECKBOX ck_contin	_ilft	_ls	@	.,			///
	option(continuous)						///
	label("Treat factor-variable level indicator covariates as continuous")
END

SCRIPT main_marg_eff_on
BEGIN
	main.rb_dydx.enable
	main.rb_eyex.enable
	main.rb_dyex.enable
	main.rb_eydx.enable
	main.tx_marg_eff.enable
	main.cb_marg_eff.enable
	main.ck_contin.enable
END

SCRIPT main_marg_eff_off
BEGIN
	main.rb_dydx.disable
	main.rb_eyex.disable
	main.rb_dyex.disable
	main.rb_eydx.disable
	main.tx_marg_eff.disable
	main.cb_marg_eff.disable
	main.ck_contin.disable
END

SCRIPT showContrastListDialog
BEGIN
	create CHILD _contrast_list
	_contrast_list.setExitString contrastListString
	_contrast_list.setExitAction "main.cb_marlist.setvalue class contrastListString.value"
END

SCRIPT at_PREINIT
BEGIN
	create STRING at_tmp
	create STRING at_tmp2
	create STRING at_childdlg
	create STRING at_child_result
	create STRING at_cmd_output

	create ARRAY at_list

	create SVECTOR ATCommandDisplayList
	create SVECTOR ATCommandList
	create SVECTOR ATCommandValues
	create SVECTOR ATStatusList
	create SVECTOR ATChildDialogList

	create DOUBLE at_count
	create DOUBLE at_position
	create DOUBLE at_arraysize

	at.bu_at_edit.disable
	at.bu_at_disable.disable
	at.bu_at_enable.disable
END

DIALOG at, tabtitle("At")
BEGIN
  RADIO rb_default	_lft	_top	_iwd	., first		///
	label("All covariates at observed values in the sample")
  RADIO rb_atmeans	@	_ss	@	., last			///
	option(atmeans)							///
	label("All covariates at their means in the sample")
  CHECKBOX ck_atbal	@	_ms	@	.,			///
	option(asbalanced)						///
	onclickon("script adv_emptycell_on")				///
	onclickoff("script adv_emptycell_off")				///
	label("For each factor variable, treat all levels as though equally probable")
  TEXT tx_atbal		_cksep	_vss	_inwd	.,			///
	label("(overrides the two settings above for factor variables)")

  TEXT tx_atBuild	_lft	_xls	@	.,			///
	label("At specifications: (modify settings from above)")
  DEFINE holdy @y
  LISTBOX lb_atBuild	@	_ss	200	95,			///
	contents(at_list) 						///
	ondblclick(program at_edit)					///
	onselchange(program at_sel_changed)				///
	nomemory
  BUTTON bu_at_new	+210	@	80	.,			///
	label("Create...")						///
	onpush(program at_create)					///
	tooltip("Create")
  BUTTON bu_at_edit	@	_ms	@	.,			///
	label("Edit")							///
	onpush(program at_edit)  					///
	tooltip("Edit")
  BUTTON bu_at_disable	@	_ms	@	.,			///
	label("Disable")						///
	onpush(program at_disable)					///
	tooltip("Click to disable an at specification")
  BUTTON bu_at_enable	@	_ms	@	.,			///
	label("Enable")							///
	onpush(program at_enable)					///
	tooltip("Click to enable an at specification")
  TEXTBOX tb_at_note	_lft	+25	_iwd	_tb2,			///
	label(`"Press "Create" to define a new at specification.  Each specification sets the covariate values at which margins are to be taken.  Multiple at specifications are allowed."')
END

PROGRAM at_create
BEGIN
	call at_count.setvalue class ATChildDialogList.size
	call at_count.increment
	call at_count.withvalue at_childdlg.setvalue "at@"
	call program at_show_at_child
END

PROGRAM at_edit
BEGIN
	call ATCommandDisplayList.findstr class at.lb_atBuild.value
	call at_position.setvalue class ATCommandDisplayList.position
	call at_position.withvalue at_childdlg.setvalue			///
		class ATChildDialogList.values[@]

	call program at_show_at_child_edit
END

PROGRAM at_show_at_child
BEGIN
	call at_childdlg.withvalue create CHILD margins_at AS @
	call at_childdlg.withvalue @.setExitString "at_child_result"
	call at_childdlg.withvalue @.setExitAction "program at_child_done"

	call at_count.withvalue at_tmp.setvalue "Specification @"
	call at_childdlg.withvalue at_tmp2.setvalue "@.settitle"
	call at_tmp2.append `" ""'
	call at_tmp2.append class at_tmp.value
	call at_tmp2.append `"""'
	call at_tmp2.withvalue @
END

PROGRAM at_show_at_child_edit
BEGIN
	call at_childdlg.withvalue create CHILD margins_at AS @
	call at_childdlg.withvalue @.setExitString "at_child_result"
	call at_childdlg.withvalue @.setExitAction "program at_child_done"

	call at_position.withvalue at_tmp.setvalue			///
		class ATCommandDisplayList.values[@]
	call at_childdlg.withvalue at_tmp2.setvalue "@.settitle"
	call at_tmp2.append `" ""'
	call at_tmp2.append class at_tmp.value
	call at_tmp2.append `"""'
	call at_tmp2.withvalue @
END

PROGRAM at_child_done
BEGIN
	call ATChildDialogList.findstr class at_childdlg.value
	call at_position.setvalue class ATChildDialogList.position
	if at_position {
		call at_position.withvalue at_tmp.setvalue		///
			class ATStatusList.values[@]
		if at_tmp.iseq("active") {
			call at_position.withvalue			///
				ATCommandDisplayList.store class	///
				at_position.value "Specification @"
			call ATCommandValues.store class		///
				at_position.value class			///
				at_child_result.value
			call at_position.withvalue			///
				at_tmp2.setvalue "Specification @"
		}
		else {
			call at_position.withvalue			///
				at_tmp2.setvalue "Specification @"

			call at_tmp2.withvalue				///
				ATCommandDisplayList.store		///
				class at_position.value "@ (disabled)"
		}

		call ATCommandList.store class				///
			at_position.value class 			///
			at_child_result.value

		call ATCommandDisplayList.copyToArray at_list
		call at.lb_atBuild.repopulate
		call at.lb_atBuild.setvalue class at_tmp2.value
	}
	else {
		call at_arraysize.setvalue class 			///
			ATChildDialogList.size
		call at_arraysize.increment

		/* Store child dialog name */
		call ATChildDialogList.store class			///
			at_arraysize.value class			///
			at_childdlg.value

		/* Store listbox display equation string */
		call at_arraysize.withvalue				///
			ATCommandDisplayList.store class		///
			at_arraysize.value "Specification @"

		/* Store child dialog result string */
		call ATCommandList.store class				///
			at_arraysize.value 				///
			class at_child_result.value

		/* Store child dialog result string for final command
		   For disable/enable */
		call ATCommandValues.store class			///
			at_arraysize.value class 			///
			at_child_result.value

		/* Store disable/enable status */
		call ATStatusList.store					///
			class at_arraysize.value "active"

		call ATCommandDisplayList.copyToArray at_list
		call at.lb_atBuild.repopulate
		call at_arraysize.withvalue				///
			at.lb_atBuild.setvalue "Specification @"
	}
END

PROGRAM at_sel_changed
BEGIN
	call ATCommandDisplayList.findstr class at.lb_atBuild.value
	call at_position.setvalue class 				///
		ATCommandDisplayList.position
	call at_position.withvalue at_tmp.setvalue			///
		class ATStatusList.values[@]
	if at_position {
		call at.bu_at_edit.enable
		call at_position.withvalue				///
			at.tb_at_note.setlabel				///
			class ATCommandList.values[@]
	}

	if at_tmp.iseq("disable") {
		call at.bu_at_enable.enable
		call at.bu_at_disable.disable
	}
	if at_tmp.iseq("active") {
		call at.bu_at_enable.disable
		call at.bu_at_disable.enable
	}
END

PROGRAM at_disable
BEGIN
	call ATCommandDisplayList.findstr class at.lb_atBuild.value
	call at_position.setvalue class					///
		ATCommandDisplayList.position

	call at_tmp.setvalue class at.lb_atBuild.value
	call ATStatusList.store class at_position.value "disable"
	call ATCommandValues.store class at_position.value ""
	call at_tmp.withvalue ATCommandDisplayList.store		///
		class at_position.value "@ (disabled)"

	call ATCommandDisplayList.copyToArray at_list
	call at_tmp.withvalue at_tmp2.setvalue "@ (disabled)"
	call at.lb_atBuild.repopulate
	call at.lb_atBuild.setvalue class at_tmp2.value
END

PROGRAM at_enable
BEGIN
	call ATCommandDisplayList.findstr class at.lb_atBuild.value
	call at_position.setvalue class 				///
		ATCommandDisplayList.position

	call ATStatusList.store class at_position.value "active"
	call at_position.withvalue ATCommandValues.store 		///
		class at_position.value class 				///
		ATCommandList.values[@]

	call at_position.withvalue 					///
		ATCommandDisplayList.store				///
		class at_position.value "Specification @"

	call ATCommandDisplayList.copyToArray at_list
	call at_position.withvalue at_tmp2.setvalue class		///
		ATCommandDisplayList.values[@]
	call at.lb_atBuild.repopulate
	call at.lb_atBuild.setvalue class at_tmp2.value
END

PROGRAM at_lb_atBuild_output
BEGIN
	call ATCommandValues.copyToString at_cmd_output
	call at_arraysize.setvalue class ATStatusList.size

	if at_cmd_output {
		put at_cmd_output
	}
END

SCRIPT sub_PREINIT
BEGIN
	create STRING sub_OverString
END

DIALOG sub, tabtitle("if/in/over")
BEGIN
  CHECKBOX ck_over	_lft	_top	_iwd	_ht4h,			///
	groupbox							///
	onclickon(program _sub_over_on)					///
	onclickoff(program _sub_over_off)				///
	label("Estimate margins for each unique value of group variables")

  TEXT tx_over		_ilft	_ss	_ivlwd	.,			///
	label("Group variables:")
  VARLIST vl_over	@	_ss	_ibwd	.,			///
	option(over)							///
	label("Group variables")
  BUTTON  bu_contrastoverlist	_slw40	@	20	.,		///
	onpush(script showContrastListOverDialog)			///
	tooltip("Create a contrast list")				///
        label("...")

  CHECKBOX ck_subpop	_lft	+45	_iwd	_ht9h,			///
	groupbox							///
	onclickon(program _sub_subpop_on)				///
	onclickoff(script _sub_subpop_off)				///
	label("Subpopulation estimation")
  RADIO rb_subpop	_ilft	_ss	_ibwd	., first		///
	onclickon(program sub_subpop_enable)				///
	onclickoff(sub.vn_subpop.disable)				///
	label("Indicator variable:")
  VARNAME vn_subpop	_indent	_ss	_cwd3_2	.,			///
	option(subpop)							///
	label("Indicator variable")
  RADIO rb_subif	_ilft	_ls	_ibwd	., last			///
	onclickon(program sub_subpop_enable)				///
	onclickoff(sub.ex_subif.disable)				///
	label("If: (expression)")
  EXP ex_subif		_indent	_ss	-10	.,			///
	error(`"If: (expression) for "Subpopulation estimation""')	///
	label("Create...")

  GROUPBOX gb_ifin	_lft	+45	_iwd	_ht7h,			///
	label("Restrict observations")
  TEXT tx_if		_ilft	_ss	_ibwd	.,			///
	label("If: (expression)")
  EXP ex_if		@	_ss	_ibwd	.,			///
	label("Create...")

  CHECKBOX ck_in	_ilft	_ms	100	.,			///
	label("Obs. in range:")						///
	onclickon(script _sub_in_on)					///
	onclickoff(script _sub_in_off)
  SPINNER sp_from	+105	@	_spwd	.,			///
	min(1)								///
	max(c(N))							///
	default(1)
  TEXT tx_to		_spsep	@	15	.,			///
	label("to:")							///
	right
  SPINNER sp_to		+25	@	_spwd	.,			///
	min(1)								///
	max(c(N))							///
	default(c(N))
END

PROGRAM _sub_over_on
BEGIN
	call sub.tx_over.enable
	call sub.vl_over.enable
	if con.ck_contrast {
		call sub.bu_contrastoverlist.enable
		call con.ck_overjoint.enable
	}
END

PROGRAM _sub_over_off
BEGIN
	call sub.tx_over.disable
	call sub.vl_over.disable
	if con.ck_contrast {
		call sub.bu_contrastoverlist.disable
		call con.ck_overjoint.disable
	}
END

PROGRAM _sub_subpop_on
BEGIN
	call sub.rb_subpop.enable
	call sub.rb_subif.enable
	if sub.rb_subpop {
		call sub.vn_subpop.enable
	}
	if sub.rb_subif {
		call sub.ex_subif.enable
	}
END

SCRIPT _sub_subpop_off
BEGIN
	sub.rb_subpop.disable
	sub.rb_subif.disable
	sub.vn_subpop.disable
	sub.ex_subif.disable
END

PROGRAM sub_subpop_enable
BEGIN
	if sub.ck_subpop {
		if sub.rb_subpop {
			call sub.vn_subpop.enable
		}
		if sub.rb_subif {
			call sub.ex_subif.enable
		}
	}
END

SCRIPT showContrastListOverDialog
BEGIN
	create CHILD _margins_contrast_ow, message("-over-")
	_margins_contrast_ow.setExitString sub_OverString
	_margins_contrast_ow.setExitAction "sub.vl_over.setvalue class sub_OverString.value"
END

SCRIPT within_PREINIT
BEGIN
	create STRING within_WithinString
END

DIALOG within, tabtitle("Within")
BEGIN
  CHECKBOX ck_within	_lft	_top	_iwd	_ht4h,			///
	groupbox							///
	onclickon(program within_on)					///
	onclickoff(program within_off)					///
	label("Estimate margins at unique values of nesting factors")
  TEXT tx_within	_indent	_ss	_inwd	.,			///
	label("Nesting factors:")
  COMBOBOX cb_within	@	_ss	@	.,			///
	append								///
	dropdown							///
	contents(margins_flist)						///
	option(within)							///
	label("Nesting factors")
  BUTTON  bu_contrastwithinlist	_slw40	@	20	.,		///
	onpush(script showContrastListWithinDialog)			///
	tooltip("Create a contrast list")				///
        label("...")
END

PROGRAM within_on
BEGIN
	call within.tx_within.enable
	call within.cb_within.enable
	if con.ck_contrast {
		call within.bu_contrastwithinlist.enable
		call con.ck_withinjoint.enable
	}
END

PROGRAM within_off
BEGIN
	call within.tx_within.disable
	call within.cb_within.disable
	if con.ck_contrast {
		call within.bu_contrastwithinlist.disable
		call con.ck_withinjoint.disable
	}
	
END

SCRIPT showContrastListWithinDialog
BEGIN
	create CHILD _margins_contrast_ow, message("-within-")
	_margins_contrast_ow.setExitString within_WithinString
	_margins_contrast_ow.setExitAction "within.cb_within.setvalue class within_WithinString.value"
END

INCLUDE weights

DIALOG se, tabtitle("SE")
BEGIN
  TEXT tx_type		_lft	_top	_iwd	.,			///
	label("Standard error type:")
  LISTBOX lb_vcetype	_lft	_ss	225	75,			///
	option(vce)							///
	contents(se_type_list)						///
	values(se_type_values)						///
	onselchange(program se_type_actions)

  CHECKBOX ck_nose	_lft	120	_iwd	.,			///
	option(nose)							///
	label("Suppress calculation of standard errors")
END

LIST se_type_list
BEGIN
	"Delta method (default)"
	"Unconditional"
END

LIST se_type_values
BEGIN
	""
	unconditional
END

PROGRAM se_type_actions
BEGIN
	if se.lb_vcetype.iseq("unconditional") {
		call sub.ck_over.setlabel "Estimate margins for each subpopualtion defined by group variables"
	}
	else {
		call sub.ck_over.setlabel "Estimate margins for each unique value of group variables"
	}
END

DIALOG adv, tabtitle("Advanced")
BEGIN
  CHECKBOX ck_noweights		_lft	_top	_iwd	.,		///
	option(noweights)						///
	label("Ignore weights specified at estimation")
  CHECKBOX ck_noesample		@	_ms	@	.,		///
	option(noesample)						///
	label("Do not restrict sample to estimation sample")
  GROUPBOX gb_emptycell		@	_ls	@	_ht4,		///
	label("Treatment of empty cells for balanced factors")
  RADIO rb_strict		_indent	_ss	_inwd	., first	///
	option(emptycells(strict))					///
	label(`"Declare all margins involving empty as "not estimable""')
  RADIO rb_reweight		@	_ss	@	., last		///
	option(emptycells(reweight))					///
	label("Reweight nonempty cells to account for empty cells")
  TEXT tx_estimtolerance	_lft	_xls	_iwd	.,		///
	label("Numerical tolerance used to determine estimable functions:")
  EDIT ed_estimtolerance	@	_ss	_vnwd	.,		///
	option(estimtolerance)						///
	default("1e-5")							///
	label("Numerical tolerance used to determine estimable functions")
  CHECKBOX ck_noestim		_lft	_ls	_iwd	.,		///
	option(noestimcheck)						///
	label("Suppress estimability checks")
  CHECKBOX ck_force		@	_ms	@	.,		///
	option(force)							///
	label("Estimate margins despite potential problems")
  CHECKBOX ck_nochain		@	_ms	@	.,		///
	option(nochainrule)						///
	label("Do not use chain rule when computing derivatives")
END

SCRIPT adv_emptycell_on
BEGIN
	adv.gb_emptycell.enable
	adv.rb_strict.enable
	adv.rb_reweight.enable
END

SCRIPT adv_emptycell_off
BEGIN
	adv.gb_emptycell.disable
	adv.rb_strict.disable
	adv.rb_reweight.disable
END

SCRIPT rpt_POSTINIT
BEGIN
	create STRING rpt_bu_fmtcoefResults
	program rpt_bu_fmtcoef_ckResults
END

DIALOG rpt, tabtitle("Reporting")
BEGIN
  DEFINE   _x  _lft
  DEFINE   _cx _spr
  DEFINE   _y  _top
  INCLUDE  _sp_level

  TEXT tx_mcompare		_lft	_ls	_cwd1	.,		///
	label("Multiple comparisons:")
  COMBOBOX cb_mcompare		@	_ss	@	.,		///
	dropdownlist							///
	contents(rpt_mcompare_list)					///
	values(rpt_mcompare_values)					///
	option("mcompare")						///
	label("Multiple comparisons")
  
  DEFINE _x _lft
  DEFINE _y _ls
  DEFINE _cx _iwd
  INCLUDE _vsquish

  CHECKBOX ck_noatleg	_lft	_ms	_iwd	.,			///
	option(noatlegend)						///
	label("Suppress legend of fixed covariate values")
  CHECKBOX ck_post	@	_ms	@	.,			///
	option(post)							///
	label("Post margins and their VCE as estimation results")

  DEFINE _x _lft
  DEFINE _y _ls
  INCLUDE _bu_coef_table_reporting
END

INCLUDE fmt_coef_table_reporting_pr

LIST rpt_mcompare_list
BEGIN
	"Do not adjust for multiple comparisons"
	"Bonferroni's method"
	"Bonferroni's method; adjust across all terms"
	"Sidak's method"
	"Sidak's method; adjust across all terms"
	"Scheffe's method"
END

LIST rpt_mcompare_values
BEGIN
	""
	bonferroni
	"bonferroni adjustall"
	sidak
	"sidak adjustall"
	scheffe
END

SCRIPT con_PREINIT
BEGIN
	create STRING con_AtString
END

DIALOG con, tabtitle("Contrast")
BEGIN
  CHECKBOX ck_contrast		_lft	_top	_iwd	495,		///
	groupbox							///
	onclickon(program con_contrast_on)				///
	onclickoff(program con_contrast_off)				///
	label("Contrasts of margins")
  CHECKBOX ck_overall		_ilft	_ms	_inwd	.,		///
	option("overall")						///
	label("Add a joint hypothesis test for all specified contrasts")
  CHECKBOX ck_lincom		@	_ms	@	.,		///
	option("lincom")						///
	label("Treat user-defined contrasts as linear combinations")
  CHECKBOX ck_atcontrast	@	_ms	@	.,		///
	option("atcontrast")						///
	onclickon("script con_atcontrast_on")				///
	onclickoff("script con_atcontrast_off")				///
	label("Contrast the levels of the at() specifications")
  TEXT tx_contrastlist		@	_ss	_cwd1	.,		///
	label("Using the op. contrast operator:")
  EDIT ed_atcontrastlist	@	_ss	_lw40	.,		///
	default("r.at")							///
	label("Using the op. contrast operator")
  BUTTON  bu_atcontrastlist	_slw40	@	20	.,		///
	onpush(script showContrastListAtDialog)				///
	tooltip("Create an _at contrast list")				///
        label("...")
  CHECKBOX ck_atjoint		_ilft	_ls	_ibwd	.,		///
 	option("atjoint")						///
 	onclickon("script con_atjoint_on")				///
 	onclickoff("program con_atjoint_off")				///
	label("Test jointly across all groups defined by at()")
  CHECKBOX ck_overjoint		_ilft	_ms	_ibwd	.,		///
	option("overjoint")						///
	label("Test jointly across all levels of the unoperated over() variables")
  CHECKBOX ck_withinjoint	@	_ms	@	.,		///
	option("withinjoint")						///
	label("Test jointly across all levels of the unoperated within() variables")
  CHECKBOX ck_marginswithin	@	_ms	@	.,		///
	option("marginswithin")						///
	label("Perform contrasts within the levels of the unoperated terms in marginlist")
  RADIO rb_noeffects		_ilft	_ls	_ibwd	., first	///
	onclickon("script con_effects_off")				///
	option("noeffects")						///
	label("Suppress effects tables")
  RADIO rb_effects		@	_ss	@	., last		///
	onclickon("script con_effects_on")				///
	label("Effects tables")
  CHECKBOX ck_cieffects		_indent	_ss	_inwd	.,		///
	option("cieffects")						///
	label("Show effects table with confidence intervals")
  CHECKBOX ck_pveffects		@	_ss	@	.,		///
	option("pveffects")						///
	label("Show effects table with p-values")
  CHECKBOX ck_effects		@	_ss	@	.,		///
	option("effects")						///
	label("Show effects table with confidence intervals and p-values")
  GROUPBOX gb_wald		_ilft	_ls	_ibwd	_ht9h,		///
	label("Wald test")
  RADIO rb_wald			_indent	_ss	_inwd	., first	///
	onclickon("program con_wald_on")				///
	onclickoff("program con_wald_off")				///
	label("Show table of Wald tests")
  RADIO rb_nowald		@	_ss	@	., last		///
	option("nowald")						///
	label("Suppress the table of Wald tests")
  CHECKBOX ck_noatlevels 	@	_ls	@	.,		///
	option("noatlevels")						///
	label("Report only the overall Wald test for terms")
  CHECKBOX ck_nosvyadjust 	@	_ms	@	.,		///
	option("nosvyadjust")						///
	label("Compute unadjusted Wald tests for survey results")
END

SCRIPT con_effects_on
BEGIN
	con.ck_cieffects.enable
	con.ck_pveffects.enable
	con.ck_effects.enable
END

SCRIPT con_effects_off
BEGIN
	con.ck_cieffects.disable
	con.ck_pveffects.disable
	con.ck_effects.disable
END

PROGRAM con_contrast_on
BEGIN
	call main.cb_marlist.setposition . . 505 .
	call main.bu_contrastlist.show
	call con.ck_overall.enable
	call con.ck_lincom.enable
	call con.ck_atjoint.enable
	call con.ck_atcontrast.enable
	if con.ck_atcontrast {
		call script con_atcontrast_on
	}
	call sub.bu_contrastoverlist.show
	if sub.ck_over {
		call program _sub_over_on
	}
	else {
		call program _sub_over_off
	}
	call sub.vl_over.setposition . . 485 .
	call within.bu_contrastwithinlist.show
	if within.ck_within {
		call program within_on
	}
	else {
		call program within_off
	}
	call within.cb_within.setposition . . 485 .
	call con.ck_marginswithin.enable
	call con.gb_wald.enable
	call con.rb_wald.enable
	call con.rb_nowald.enable
	if con.rb_wald {
		call program con_wald_on
	}
	else {
		call program con_wald_off
	}
	call con.rb_noeffects.enable
	call con.rb_effects.enable
	if con.rb_noeffects {
		call script con_effects_off
	}
	else {
		call script con_effects_on
	}
	call con.gb_wald.enable
	call con.rb_wald.enable
	call con.rb_nowald.enable

	call pw.ck_pwcompare.disable
END

PROGRAM con_contrast_off
BEGIN
	call main.cb_marlist.setposition . . 530 .
	call main.bu_contrastlist.hide
	call sub.bu_contrastoverlist.hide
	call sub.vl_over.setposition . . 515 .
	call within.bu_contrastwithinlist.hide
	call within.cb_within.setposition . . 515 .

	call con.ck_overall.disable
	call con.ck_lincom.disable
	call con.ck_atjoint.disable
	call con.ck_atcontrast.disable
	call con.tx_contrastlist.disable
	call con.ed_atcontrastlist.disable
	call con.bu_atcontrastlist.disable
	call con.ck_overjoint.disable
	call con.ck_withinjoint.disable
	call con.ck_marginswithin.disable
	call con.gb_wald.disable
	call con.rb_wald.disable
	call con.rb_nowald.disable
	call con.ck_noatlevels.disable
	call con.ck_nosvyadjust.disable
	call con.rb_noeffects.disable
	call con.rb_effects.disable
	call con.ck_cieffects.disable
	call con.ck_pveffects.disable
	call con.ck_effects.disable
	call pw.ck_pwcompare.enable
	if pw.ck_pwcompare {
		call program pw_pwcompare_on
	}
END

SCRIPT con_atjoint_on
BEGIN
	con.ck_atcontrast.disable
	script con_atcontrast_off
END

PROGRAM con_atjoint_off
BEGIN
	if (con.ck_contrast) {
		call con.ck_atcontrast.enable
		if con.ck_atcontrast {
			call script con_atcontrast_on
		}
		else {
			call script con_atcontrast_off
		}
	}
END

SCRIPT con_atcontrast_on
BEGIN
	con.tx_contrastlist.enable
	con.ed_atcontrastlist.enable
	con.bu_atcontrastlist.enable
END

SCRIPT con_atcontrast_off
BEGIN
	con.tx_contrastlist.disable
	con.ed_atcontrastlist.disable
	con.bu_atcontrastlist.disable
END
	
PROGRAM con_wald_on
BEGIN
	if (con.ck_contrast) {
		call con.ck_noatlevels.enable
		call con.ck_nosvyadjust.enable
	}
END

PROGRAM con_wald_off
BEGIN
	call con.ck_noatlevels.disable
	call con.ck_nosvyadjust.disable
END

SCRIPT showContrastListAtDialog
BEGIN
	create CHILD _margins_contrast_at
	_margins_contrast_at.setExitString con_AtString
	_margins_contrast_at.setExitAction "con.ed_atcontrastlist.setvalue class con_AtString.value"
END

PROGRAM con_options_output
BEGIN
	option con.ck_overall
	option con.ck_lincom
	option con.ck_atjoint
	if con.ck_atcontrast {
		put " atcontrast"
		if con.ed_atcontrastlist {
			put "("
			put con.ed_atcontrastlist
			put ")"
		}
	}

	option con.ck_overjoint
	option con.ck_withinjoint
	option con.ck_marginswithin
	option con.rb_nowald
	if con.rb_nowald {
		option con.ck_noatlevels
		option con.ck_nosvyadjust
	}
	if (con.rb_effects & !con.ck_cieffects &			///
		!con.ck_pveffects & !con.ck_effects) {
		stopbox stop `"You must specify an "Effects table""'	///
				`" on the "Contrast" tab"'
	}
	if (con.rb_effects) {
		option con.ck_cieffects
		option con.ck_pveffects
		option con.ck_effects
	}
END

DIALOG pw, tabtitle("Pairwise comparisons")
BEGIN
  CHECKBOX ck_pwcompare		_lft	_top	_iwd	_ht18h,		///
	groupbox							///
	onclickon(program pw_pwcompare_on)				///
	onclickoff(program pw_pwcompare_off)				///
	label("Pairwise comparisons of margins")
  
  CHECKBOX ck_table		_indent	_ms	_inwd	_ht12,		///
	groupbox							///
	onclickon(script pw_table_on)					///
	onclickoff(script pw_table_off)					///
	label("Specify additional tables")

  CHECKBOX ck_cieffects		_indent	_ss	_inwd	.,		///
	option("cieffects")						///
	label("Show effects table with confidence intervals; the default")
  CHECKBOX ck_pveffects		@	_ms	@	.,		///
	option("pveffects")						///
	label("Show effects table with p-values")
  CHECKBOX ck_effects		@	_ms	@	.,		///
	option("effects")						///
	label("Show effects table with confidence intervals and p-values")
  CHECKBOX ck_cimargins		@	_ms	@	.,		///
	option("cimargins")						///
	label("Show table of margins and confidence intervals")
  CHECKBOX ck_groups		@	_ms	@	.,		///
	option("groups")						///
	label("Show table of margins and group codes")

  CHECKBOX ck_sort		_ilft	_xls	@	.,		///
	option("sort")							///
	label("Sort the margins/differences in each term")
END

SCRIPT pw_table_on
BEGIN
	pw.ck_cieffects.enable
	pw.ck_pveffects.enable
	pw.ck_effects.enable
	pw.ck_cimargins.enable
	pw.ck_groups.enable
END

SCRIPT pw_table_off
BEGIN
	pw.ck_cieffects.disable
	pw.ck_pveffects.disable
	pw.ck_effects.disable
	pw.ck_cimargins.disable
	pw.ck_groups.disable
END

PROGRAM pw_pwcompare_on
BEGIN
	call pw.ck_table.enable
	if pw.ck_table {
		call script pw_table_on
	}
	else {
		call script pw_table_off
	}
	call pw.ck_sort.enable
	call con.ck_contrast.disable
END

PROGRAM pw_pwcompare_off
BEGIN
	call pw.ck_table.disable
	call pw.ck_cieffects.disable
	call pw.ck_pveffects.disable
	call pw.ck_effects.disable
	call pw.ck_cimargins.disable
	call pw.ck_groups.disable
	call pw.ck_sort.disable
	call con.ck_contrast.enable
END

PROGRAM pw_options_output
BEGIN
	if (pw.ck_table & !pw.ck_cimargins & !pw.ck_cieffects &		///
		!pw.ck_pveffects & !pw.ck_effects & !pw.ck_groups) {
		stopbox stop `"You must specify an "Additional table""'	///
				`" on the "Pairwise comparisons" tab"'
	}
	if (pw.ck_table) {
		option pw.ck_cieffects
		option pw.ck_pveffects
		option pw.ck_effects
		option pw.ck_cimargins
		option pw.ck_groups
	}
	option pw.ck_sort
END

PROGRAM command
BEGIN
	put "margins "
	put main.cb_marlist

	ifexp sub.ex_if
	if sub.ck_in {
		inrange sub.sp_from sub.sp_to
	}
	put " " /program weights_output
	beginoptions
		option main.ck_grand
		if main.rb_predict {
			require main.ed_predict
			optionarg main.ed_predict
		}
		if main.rb_exp {
			require main.ed_exp
			optionarg main.ed_exp
		}
  		if main.ck_marg_eff {
			require main.cb_marg_eff
			if main.rb_dydx {
				put " dydx("
				put main.cb_marg_eff
				put ")"
			}
			if main.rb_eyex {
				put " eyex("
				put main.cb_marg_eff
				put ")"
			}
			if main.rb_dyex {
				put " dyex("
				put main.cb_marg_eff
				put ")"
			}
			if main.rb_eydx {
				put " eydx("
				put main.cb_marg_eff
				put ")"
			}
			option main.ck_contin
		}
		put " " /program at_lb_atBuild_output
		option at.rb_atmeans
		option at.ck_atbal

		if sub.ck_over {
			require sub.vl_over
			optionarg sub.vl_over
		}

		if sub.ck_subpop {
			if sub.rb_subpop {
				require sub.vn_subpop
				optionarg sub.vn_subpop
			}
			if sub.rb_subif {
				require sub.ex_subif
				put " subpop(if "
				put sub.ex_subif
				put ")"
			}
		}
		if within.ck_within {
			require within.cb_within
			optionarg within.cb_within
		}

		optionarg se.lb_vcetype
		option se.ck_nose

		option adv.ck_noweights
		option adv.ck_noesample
		option adv.rb_reweight
		optionarg /hidedefault adv.ed_estimtolerance
		option adv.ck_noestim
		option adv.ck_force
		option adv.ck_nochain

		optionarg /hidedefault rpt.sp_level
		optionarg rpt.cb_mcompare
		INCLUDE _vsquish_pr
		option rpt.ck_noatleg
		option rpt.ck_post
		put " " rpt_bu_fmtcoefResults
		if con.ck_contrast {
			put " contrast"
			if con.ck_overall | con.ck_lincom | 		///
			con.ck_atjoint |				///
			con.ck_atcontrast |				///
			con.ck_overjoint | 				///
			con.ck_withinjoint |				///
			con.ck_marginswithin |				///
			con.rb_nowald |					///
			con.rb_effects | con.ck_cieffects |		///
			con.ck_pveffects | con.ck_effects {
				put "("
				put /program con_options_output
				put ")"
			}
		}

		if pw.ck_pwcompare {
			put " pwcompare"
			if pw.ck_table | pw.ck_cimargins |		///
				pw.ck_groups | pw.ck_sort |		///
				pw.ck_cieffects |			///
				pw.ck_pveffects | pw.ck_effects {
				put "("
				put /program pw_options_output
				put ")"
			}
		}
	endoptions
END

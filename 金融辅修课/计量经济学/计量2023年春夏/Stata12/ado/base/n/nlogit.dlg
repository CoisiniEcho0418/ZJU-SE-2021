/*
    nlogit
 
*!  VERSION 2.0.6  14may2011
 
*/

VERSION 12.0

INCLUDE _std_wide
DEFINE _dlght 440
INCLUDE header

DEFINE c1 20
DEFINE c1wd 63

DEFINE c2 90
DEFINE c2wd 110

DEFINE c3h 225
DEFINE c3hwd 50
DEFINE c3 220
DEFINE c3wd 20

DEFINE c4 440
DEFINE c4fwd 110
DEFINE c4wd 200

DEFINE c5 520
DEFINE c5wd 70

DEFINE c6hwd 57
DEFINE c6wd 20

HELP hlp1, view("help nlogit")
RESET res1

SCRIPT PREINIT
BEGIN
	create STRING constraint_res
        script se_createAsNlogit
END

SCRIPT POSTINIT
BEGIN
	script max_setListNoBHHH

	program check_constraint_res
END

DIALOG main, tabtitle("Model")	///
	label("nlogit  -  Nested logit regression")
BEGIN
  DEFINE _x _xsetbu
  DEFINE _y _top
  INCLUDE _dviv_ts4set

  TEXT     tx_case		_lft	_ls	@	.,		///
	label("Case identifier:")
  VARNAME  vn_case		_lft	_ss	_vnwd	.,		///
  	label("Case identification variable")				///
	option("case")


  CHECKBOX ck_nocons		_vlx	@	_vlwd	.,		///
	label("Suppress constant terms for bottom-level alternatives")	///
  	onclickon(program main_noconst_off)				///
  	onclickoff(script main_noconst_on)				///
	option(noconst)

  GROUPBOX gb_model		_lft	+35	_iwd	250,		///
	label("Model alternatives")

  //Headings
  TEXT     tx_eq		_ilft	_ss	c1wd	.,		///
  	label("Level")
DEFINE toprow @y
  TEXT     tx_eq_2		@	_vss	@	.,		///
  	label("equation")

  TEXT     tx_alternative	c2	toprow	c2wd	.,		///
  	label("Alternative")
  TEXT     tx_alternative_2	@	_vss	@	.,		///
  	label("variable")

  TEXT     tx_byalternative	c3	toprow	c4wd	.,		///
  	label("By-alternative")
  TEXT     tx_byalternative_2	@	_vss	@	.,		///
  	label("variables")

  TEXT     tx_base_alternative	c4	toprow	c5wd	.,		///
  	label("Base")
  TEXT     tx_base_alternative_2 @	_vss	@	.,		///
  	label("alternative")

  TEXT     tx_estconst		c5	toprow	c6hwd	.,		///
  	label("Estimate")
  TEXT     tx_estconst_2	@	_vss	@	.,		///
  	label("constant")
  	
//Equation_1
  CHECKBOX ck_equation_1	c1	_ms	c1wd	.,		///
  	label("EQ 1")							///
  	onclickon(program main_equation_1_on)				///
  	onclickoff(script main_equation_1_off)
  VARNAME  vn_altvar_1		c2	@	c2wd	.,		///
  	label("Alternative variable for equation 1")
  VARLIST  vl_byaltvar_1	c3	@	c4wd	.,		///
  	label("By-alternative variable for equation 1")
  EDIT     ed_base_1		c4	@	c5wd	.,		///
  	option(base)
  CHECKBOX ck_estconst_1	c5	@	c6wd	., 		///
  	option(estconst)						///
  	onclickon(program check_estconst1)
 
 //Equation_2
   CHECKBOX ck_equation_2	c1	_ms	c1wd	.,		///
   	label("EQ 2")							///
   	onclickon(program main_equation_2_on)				///
   	onclickoff(script main_equation_2_off)
   VARNAME  vn_altvar_2		c2	@	c2wd	.,		///
   	label("Alternative variable for equation 2")
   VARLIST  vl_byaltvar_2	c3	@	c4wd	.,		///
   	label("By-alternative variable for equation 2")
   EDIT     ed_base_2		c4	@	c5wd	.,		///
   	option(base)
   CHECKBOX ck_estconst_2	c5	@	c6wd	.,		///
  	option(estconst)						///
  	onclickon(program check_estconst2)

//Equation_3
  CHECKBOX ck_equation_3	c1	_ms	c1wd	.,		///
  	label("EQ 3")							///
  	onclickon(program main_equation_3_on)				///
  	onclickoff(script main_equation_3_off)
  VARNAME  vn_altvar_3		c2	@	c2wd	.,		///
  	label("Alternative variable for equation 3")
  VARLIST  vl_byaltvar_3	c3	@	c4wd	.,		///
  	label("By-alternative variable for equation 3")
  EDIT     ed_base_3		c4	@	c5wd	.,		///
  	option(base)
  CHECKBOX ck_estconst_3	c5	@	c6wd	., 		///
  	option(estconst)						///
  	onclickon(program check_estconst3)

//Equation_4
  CHECKBOX ck_equation_4	c1	_ms	c1wd	.,		///
  	label("EQ 4")							///
  	onclickon(program main_equation_4_on)				///
  	onclickoff(script main_equation_4_off)
  VARNAME  vn_altvar_4		c2	@	c2wd	.,		///
  	label("Alternative variable for equation 4")
  VARLIST  vl_byaltvar_4	c3	@	c4wd	.,		///
  	label("By-alternative variable for equation 4")
  EDIT     ed_base_4		c4	@	c5wd	.,		///
  	option(base)
  CHECKBOX ck_estconst_4	c5	@	c6wd	.,		///
  	option(estconst)						///
  	onclickon(program check_estconst4)

  GROUPBOX gb_bottom		_ilft	_ls	_ibwd	75,		///
	label("Bottom level")

//Bottom-level
  TEXT     tx_required_bottom 	_iilft	_ss	55	.,		///
  	label("*") right
  VARNAME  vn_altvar_bottom	c2	@	c2wd	.,		///
  	label("Bottom level variable")
  VARLIST  vl_byaltvar_bottom   c3	@	c4wd	.,		///
  	label("By-alternative variable for bottom level")
  EDIT     ed_base_bottom	c4	@	c5wd	.,		///
   	option(base)
  TEXT     tx_note		_iilft	_ls	_iibwd	.,		///
	label("* Alternative variable required for bottom level.")

  CHECKBOX ck_nonnorm		_lft	+50	_rj120	.,		///
	label("Use the nonnormalized parameterization")			///
	option(nonnormalized)
  CHECKBOX ck_altwise		@	_ms	@	.,		///
	label("Use alternativewise deletion instead of casewise deletion")					///
	option(altwise)

  BUTTON bu_constraints		_rj100	-25	100	., 		///
	label("Constraints...")						///
	onpush(script show_constraint_dlg)
END

PROGRAM check_estconst1
BEGIN
	call main.ck_estconst_2.setoff
	call main.ck_estconst_3.setoff
	call main.ck_estconst_4.setoff
END

PROGRAM check_estconst2
BEGIN
	call main.ck_estconst_1.setoff
	call main.ck_estconst_3.setoff
	call main.ck_estconst_4.setoff
END

PROGRAM check_estconst3
BEGIN
	call main.ck_estconst_1.setoff
	call main.ck_estconst_2.setoff
	call main.ck_estconst_4.setoff
END

PROGRAM check_estconst4
BEGIN
	call main.ck_estconst_1.setoff
	call main.ck_estconst_2.setoff
	call main.ck_estconst_3.setoff
END

/* equation_1 programming */
PROGRAM main_equation_1_on
BEGIN
	call main.vn_altvar_1.enable
	call main.vl_byaltvar_1.enable
	call main.ed_base_1.enable
	if main.ck_nocons {
		call main.ck_estconst_1.enable
	}
END
SCRIPT main_equation_1_off
BEGIN
	main.vn_altvar_1.disable
	main.vl_byaltvar_1.disable
	main.ed_base_1.disable
	main.ck_estconst_1.disable
END

/* equation_2 programming */
PROGRAM main_equation_2_on
BEGIN
	call main.vn_altvar_2.enable
	call main.vl_byaltvar_2.enable
	call main.ed_base_2.enable
	if main.ck_nocons {
		call main.ck_estconst_2.enable
	}
END
SCRIPT main_equation_2_off
BEGIN
	main.vn_altvar_2.disable
	main.vl_byaltvar_2.disable
	main.ed_base_2.disable
	main.ck_estconst_2.disable
END

/* equation_3 programming */
PROGRAM main_equation_3_on
BEGIN
	call main.vn_altvar_3.enable
	call main.vl_byaltvar_3.enable
	call main.ed_base_3.enable
	if main.ck_nocons {
		call main.ck_estconst_3.enable
	}
END
SCRIPT main_equation_3_off
BEGIN
	main.vn_altvar_3.disable
	main.vl_byaltvar_3.disable
	main.ed_base_3.disable
	main.ck_estconst_3.disable
END

/* equation_4 programming */
PROGRAM main_equation_4_on
BEGIN
	call main.vn_altvar_4.enable
	call main.vl_byaltvar_4.enable
	call main.ed_base_4.enable
	if main.ck_nocons {
		call main.ck_estconst_4.enable
	}
END
SCRIPT main_equation_4_off
BEGIN
	main.vn_altvar_4.disable
	main.vl_byaltvar_4.disable
	main.ed_base_4.disable
	main.ck_estconst_4.disable
END

/* noconst programming */
SCRIPT main_noconst_on
BEGIN
	main.ck_estconst_1.disable
	main.ck_estconst_2.disable
	main.ck_estconst_3.disable
	main.ck_estconst_4.disable
END

SCRIPT show_constraint_dlg
BEGIN
	create CHILD constraint_option
	constraint_option.setExitString constraint_res
	constraint_option.setExitAction "program check_constraint_res"
END

PROGRAM check_constraint_res
BEGIN
	if constraint_res {
		call main.bu_constraints.setlabel "Constraints... *"
	}
	else {
		call main.bu_constraints.setlabel "Constraints..."
	}
END

PROGRAM main_noconst_off
BEGIN
	if main.ck_equation_1 {
		call main.ck_estconst_1.enable
	}
	if main.ck_equation_2 {
		call main.ck_estconst_2.enable
	}
	if main.ck_equation_3 {
		call main.ck_estconst_3.enable
	}
	if main.ck_equation_4 {
		call main.ck_estconst_4.enable
	}
END

INCLUDE byifin
INCLUDE weights_fpi
INCLUDE se

SCRIPT rpt_POSTINIT
BEGIN
	create STRING rpt_bu_fmtcoefResults
	program rpt_bu_fmtcoef_ckResults
END

DIALOG rpt, tabtitle("Reporting")
BEGIN
  DEFINE _x _lft
  DEFINE _cx _spr2
  DEFINE _y _top
  INCLUDE _sp_level

  CHECKBOX ck_notree	_lft	_ls	_iwd	.,		///
	label("Suppress display of tree structure output")	///
	option(notree)

  DEFINE _x _lft
  DEFINE _y _ls
  DEFINE _cx _iwd
  INCLUDE _nocnsreport

  DEFINE _x _lft
  DEFINE _y _ls
  INCLUDE _bu_coef_table_reporting
END

INCLUDE fmt_coef_table_reporting_pr

INCLUDE max_ml

PROGRAM equation_1_output
BEGIN
	if main.ck_equation_1 {
		put " " "|| "
		require main.vn_altvar_1
		put main.vn_altvar_1 ": "
		put main.vl_byaltvar_1
		beginoptions
			optionarg main.ed_base_1
			option main.ck_estconst_1
		endoptions
	}
END

PROGRAM equation_2_output
BEGIN
	if main.ck_equation_2 {
		put " " "|| "
		require main.vn_altvar_2
		put main.vn_altvar_2 ": "
		put main.vl_byaltvar_2
		beginoptions
			optionarg main.ed_base_2
			option main.ck_estconst_2
		endoptions
	}
END

PROGRAM equation_3_output
BEGIN
	if main.ck_equation_3 {
		put " " "|| "
		require main.vn_altvar_3
		put main.vn_altvar_3 ": "
		put main.vl_byaltvar_3
		beginoptions
			optionarg main.ed_base_3
			option main.ck_estconst_3
		endoptions
	}
END

PROGRAM equation_4_output
BEGIN
	if main.ck_equation_4 {
		put " " "|| "
		require main.vn_altvar_4
		put main.vn_altvar_4 ": "
		put main.vl_byaltvar_4
		beginoptions
			optionarg main.ed_base_4
			option main.ck_estconst_4
		endoptions
	}
END

PROGRAM bottom_level_output
BEGIN
	put " " "|| "
	require main.vn_altvar_bottom
	put main.vn_altvar_bottom ": "
	put main.vl_byaltvar_bottom
END

PROGRAM command
BEGIN
	put /program by_output " "
	put "nlogit "
	varlist main.vn_dv [main.vl_iv]
	put " " /program ifin_output
	put " " /program weights_output

	put " " /program equation_1_output
	put " " /program equation_2_output
	put " " /program equation_3_output
	put " " /program equation_4_output
	put " " /program bottom_level_output

	beginoptions
		optionarg main.ed_base_bottom
		optionarg main.vn_case
		option main.ck_nocons
		option main.ck_nonnorm
		option main.ck_altwise

		put " " constraint_res
		put " " /program se_output

		optionarg /hidedefault rpt.sp_level
		option rpt.ck_notree
		INCLUDE _nocnsreport_pr
		put " " rpt_bu_fmtcoefResults

		put " " /program max_output
	endoptions

END

